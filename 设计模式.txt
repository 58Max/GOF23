> # GoF23 (23中设计模式)

oop的七大原则

- 开闭原则 ：对外开放，对修改关闭
- 里氏替换原则 ：集成必须确保类所拥有的性质在子类中仍然成立
- 依赖倒置原则 ：面向接口编程
- 单一职责原则 ：低耦合 高内聚
- 接口隔离原则 ：
- 迪米特法则 ：
- 合成复用原则 ：





## 创建型模式



#### 单例模式

- 饿汉式
- 懒汉式
- 内部静态类
- 枚举实现单例模式



#### 工厂模式

- 简单工厂模式  当增加时需要对原有的代码进行修改
- 工厂方法模式  当增加时只需要进行扩展就可以 但是会更复杂
- 抽象工厂模式



#### 抽象工厂模式

超级工厂 创建其他工厂

就是每个工厂都是生产其产品族的产品，生产的产品不一定是一个产品等级的产品

![image-20200911103809461](%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.assets/image-20200911103809461.png)



#### 建造者模式

> 提供创建对象的最佳方式，将一个复杂对象的构建与它的表示分离



![](%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.assets/image-20200911110746063.png)





#### 原型模式

> 核心思想实现Cloneable接口，并通过对clone()方法的重写来实现克隆





## 结构型模式

- 适配器模式
- 代理模式
- 桥接模式
- 装饰模式
- 组合模式
- 外观模式
- 享元模式



#### 适配器模式

角色分析

- 目标接口  客户所期待的接口 目标可以是具体的或抽象的类 也可以是接口
- 需要适配的类 需要适配的类或适配者类
- 适配器 通过包装一个需要适配的对象，把原接口转换成目标对象



类适配器 通过继承实现

![image-20200913190944556](%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.assets/image-20200913190944556.png)



组合 对象适配器 通过注入 接口对象  实现可插拔

![image-20200913191257258](%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.assets/image-20200913191257258.png)



#### 桥接模式



> 桥接模式的核心 通过组合的方式 在Computer 中加入了Brand的抽象类属性

![image-20200913193454651](%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.assets/image-20200913193454651.png)

## 行为型模式

#### 